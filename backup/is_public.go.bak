
// isPublicIP checks if the given IP address is a public one.
func isPublicIP(ip net.IP) bool {
	return !ip.IsLoopback() && !ip.IsPrivate() && !ip.IsLinkLocalUnicast()
}

// hasPublicIP checks if any of the multiaddresses contain a public IP address.
func hasPublicIP(addrs []multiaddr.Multiaddr) bool {
	for _, addr := range addrs {
		ip, err := addr.ValueForProtocol(multiaddr.P_IP4)
		if err == nil {
			if isPublicIP(net.ParseIP(ip)) {
				return true
			}
		}

		ip, err = addr.ValueForProtocol(multiaddr.P_IP6)
		if err == nil {
			if isPublicIP(net.ParseIP(ip)) {
				return true
			}
		}
	}
	return false
}

// readInputWithDefault prompts the user with a default value
func readInputWithDefault(reader *bufio.Reader, prompt, defaultValue string) (string, error) {
	fmt.Printf("%s [%s]: ", prompt, defaultValue)
	input, err := reader.ReadString('\n')
	if err != nil {
		return "", err
	}
	input = strings.TrimSpace(input)
	if input == "" {
		return defaultValue, nil
	}
	return input, nil
}
